{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["console","log","googleResponse","response","Blob","JSON","stringify","access_token","accessToken","email","profileObj","type","options","method","body","mode","cache","fetch","then","r","token","headers","get","json","user","setState","isAuthenticated","App","className","src","logo","alt","clientId","buttonText","isSignedIn","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,G,MAAA,IAA0B,kC,wBCIzCA,QAAQC,IAAI,UAEZ,IAAMC,EAAiB,SAACC,GACF,IAAIC,KAAK,CAACC,KAAKC,UAAU,CAACC,aAAcJ,EAASK,YAAaC,MAAON,EAASO,WAAWD,OAAQ,KAAM,IAAK,CAACE,KAAM,qBAArI,IACMC,EAAU,CACZC,OAAQ,OAERC,KAAMT,KAAKC,UAAUH,GACrBY,KAAM,OACNC,MAAO,WAGXhB,QAAQC,IAAI,WAAYE,GACxBc,MAAM,wCAAyCL,GAASM,MAAK,SAAAC,GACzD,IAAMC,EAAQD,EAAEE,QAAQC,IAAI,gBAC5BH,EAAEI,OAAOL,MAAK,SAAAM,GACNJ,GACA,EAAKK,SAAS,CAACC,iBAAiB,EAAMF,OAAMJ,iBA2B7CO,MArBf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,8CADT,0BAGA,cAAC,cAAD,CACIC,SAAS,2EACTC,WAAW,QACXC,YAAY,EACZC,UAAWjC,UC3BhBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8d3e735f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nconsole.log(\"v2.2.6\")\n\nconst googleResponse = (response) => {\n    const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken, email: response.profileObj.email}, null, 2)], {type: 'application/json'});\n    const options = {\n        method: 'POST',\n        // body: tokenBlob,\n        body: JSON.stringify(response),\n        mode: 'cors',\n        cache: 'default'\n    };\n\n    console.log(\"response\", response);\n    fetch('https://endorphin.fun/google/redirect', options).then(r => {\n        const token = r.headers.get('x-auth-token');\n        r.json().then(user => {\n            if (token) {\n                this.setState({isAuthenticated: true, user, token})\n            }\n        });\n    })\n};\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <GoogleLogin\n                    clientId=\"319511837370-6h11919mja93u8rijnlbu3h5j8kt9k5l.apps.googleusercontent.com\"\n                    buttonText=\"Login\"\n                    isSignedIn={true}\n                    onSuccess={googleResponse}\n                    // uxMode=\"popup\"\n                    // redirectUri=\"https://endorphin.fun/google/redirect\"\n                />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}