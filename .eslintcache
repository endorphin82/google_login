[{"/Users/macmini/PhpstormProjects/google_login/src/index.js":"1","/Users/macmini/PhpstormProjects/google_login/src/App.js":"2","/Users/macmini/PhpstormProjects/google_login/src/reportWebVitals.js":"3","/Users/macmini/PhpstormProjects/google_login/src/SocialButton.js":"4","/Users/macmini/PhpstormProjects/google_login/src/pages/login.tsx":"5","/Users/macmini/PhpstormProjects/google_login/src/styles.tsx":"6","/Users/macmini/PhpstormProjects/google_login/src/hooks/index.ts":"7","/Users/macmini/PhpstormProjects/google_login/src/hooks/facebook/use-facebook-login.ts":"8","/Users/macmini/PhpstormProjects/google_login/src/hooks/google/use-google-login.ts":"9","/Users/macmini/PhpstormProjects/google_login/src/hooks/linkedin/use-linkedin-login.ts":"10"},{"size":592,"mtime":1612450977643,"results":"11","hashOfConfig":"12"},{"size":6768,"mtime":1612450956114,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609243006994,"results":"14","hashOfConfig":"12"},{"size":344,"mtime":1611747263321,"results":"15","hashOfConfig":"16"},{"size":2977,"mtime":1611842096723,"results":"17","hashOfConfig":"12"},{"size":1407,"mtime":1611842393556,"results":"18","hashOfConfig":"12"},{"size":137,"mtime":1604374359000,"results":"19","hashOfConfig":"12"},{"size":3399,"mtime":1604374359000,"results":"20","hashOfConfig":"12"},{"size":3034,"mtime":1604374359000,"results":"21","hashOfConfig":"12"},{"size":1966,"mtime":1611842289345,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j1le9e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cr6il1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/macmini/PhpstormProjects/google_login/src/index.js",[],"/Users/macmini/PhpstormProjects/google_login/src/App.js",["48","49"],"/Users/macmini/PhpstormProjects/google_login/src/reportWebVitals.js",[],["50","51"],"/Users/macmini/PhpstormProjects/google_login/src/SocialButton.js",[],"/Users/macmini/PhpstormProjects/google_login/src/pages/login.tsx",[],["52","53"],"/Users/macmini/PhpstormProjects/google_login/src/styles.tsx",[],"/Users/macmini/PhpstormProjects/google_login/src/hooks/index.ts",[],"/Users/macmini/PhpstormProjects/google_login/src/hooks/facebook/use-facebook-login.ts",["54","55"],"import { useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nimport {\n\tIFacebookLoginInfos,\n\tIFacebookLoginResponse,\n\tIFaceBookUserInfos,\n\tIUserAuthResponse,\n} from './interfaces';\n\nconst customWindow: any = window;\n\nconst facebookLoginDefaultParams: Partial<IFacebookLoginInfos> = {\n\tcookie: false,\n\txfbml: false,\n\tfields: ['name', 'email', 'picture'],\n};\n\n/**\n * @description React hook for authentication with Facebook\n * internalUser is the return of your own login app\n */\nexport const useFacebookLogin = <T>(facebookLoginParams: IFacebookLoginInfos) => {\n\tconst facebookLoginInfos = {\n\t\t...facebookLoginDefaultParams,\n\t\t...facebookLoginParams,\n\t};\n\tconst facebookSDKId = 'facebook-jssdk';\n\tconst { language } = facebookLoginInfos;\n\n\tconst [user, setUser] = useState<IFaceBookUserInfos>();\n\tconst [userLogin, setUserLogin] = useState<IUserAuthResponse>();\n\tconst [internalUser, setInternalUser] = useState<T>();\n\tconst [loaded, setLoaded] = useState(false);\n\n\tuseEffect(() => {\n\t\t(() => {\n\t\t\tif (!document.getElementById(facebookSDKId)) {\n\t\t\t\tconst element = document.getElementsByTagName('script')[0];\n\t\t\t\tlet scriptElement = document.createElement('script') as HTMLScriptElement;\n\n\t\t\t\tscriptElement.id = facebookSDKId;\n\t\t\t\tscriptElement.src = `https://connect.facebook.net/${language}/sdk.js`;\n\n\t\t\t\tif (element?.parentNode) {\n\t\t\t\t\telement.parentNode.insertBefore(scriptElement, element);\n\t\t\t\t} else {\n\t\t\t\t\tdocument.head.appendChild(scriptElement);\n\t\t\t\t};\n\n\t\t\t\tsetLoaded(true);\n\t\t\t}\n\t\t})();\n\n\t\treturn () => {\n\t\t\tconst element = document.getElementById(facebookSDKId);\n\n\t\t\tif (element) element.parentNode?.removeChild(element);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst facebookInit = {\n\t\t\tversion: `v${facebookLoginInfos?.version.toFixed(1)}`,\n\t\t\tappId: facebookLoginInfos?.appId,\n\t\t\txfbml: facebookLoginInfos?.xfbml,\n\t\t\tcookie: facebookLoginInfos?.cookie,\n\t\t};\n\n\t\tcustomWindow.fbAsyncInit = () => customWindow?.FB?.init(facebookInit);\n\t}, [facebookLoginInfos]);\n\n\tconst authenticate = (response: IFacebookLoginResponse) => {\n\t\tif (response.authResponse) setUserLogin(response.authResponse);\n\n\t\tif (response.status === 'connected') {\n\t\t\tconst requestParams = {\n\t\t\t\tlocale: facebookLoginInfos?.language,\n\t\t\t\tfields: facebookLoginInfos?.fields?.join(','),\n\t\t\t};\n\n\t\t\tcustomWindow?.FB?.api(\n\t\t\t\t'/me',\n\t\t\t\trequestParams,\n\t\t\t\t(user: IFaceBookUserInfos) => {\n\t\t\t\t\tif (facebookLoginInfos.internalAuthenticateURL) {\n\t\t\t\t\t\tconst userData = {\n\t\t\t\t\t\t\taccessToken: response.authResponse?.accessToken,\n\t\t\t\t\t\t\tdataAccessExpirationTime: response.authResponse?.data_access_expiration_time,\n\t\t\t\t\t\t\texpiresIn: response.authResponse?.expiresIn,\n\t\t\t\t\t\t\tuserID: response.authResponse?.userID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\taxios\n\t\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t\tfacebookLoginInfos.internalAuthenticateURL,\n\t\t\t\t\t\t\t\tuserData,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then(({ data }: AxiosResponse<T>) =>\n\t\t\t\t\t\t\t\tsetInternalUser(data),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.catch(error => new Error(error))\n\t\t\t\t\t\t\t.finally(() => setUser(user));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetUser(user);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t};\n\n\tconst logIn = () =>\n\t\tcustomWindow?.FB?.login(\n\t\t\t(loginResponse: IFacebookLoginResponse) =>\n\t\t\t\tauthenticate(loginResponse),\n\t\t\ttrue,\n\t\t);\n\n\tconst logOut = () => {\n\t\tcustomWindow?.FB?.logout();\n\t\tsetInternalUser(undefined);\n\t\tsetUser(undefined);\n\t};\n\n\treturn {\n\t\tuserInfos: user,\n\t\tuserLogin,\n\t\tloaded,\n\t\tinternalUser,\n\t\tlogIn,\n\t\tlogOut,\n\t};\n};\n","/Users/macmini/PhpstormProjects/google_login/src/hooks/google/use-google-login.ts",["56"],"import { useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nimport {\n\tIGoogleAuth,\n\tIGoogleAuthResponse,\n\tIGoogleLoginInfos,\n\tIGoogleUserAuth,\n} from './interfaces';\n\nconst customWindow: any = window;\n\n/**\n * @description React hook for authentication with Google\n * internalUser is the return of your own login app\n */\nexport const useGoogleLogin = <T>(googleLoginInfos: IGoogleLoginInfos) => {\n\tconst params = {\n\t\tclient_id: googleLoginInfos.appId,\n\t\taccess_type: '',\n\t};\n\n\tconst googleSDKId = 'google-login';\n\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [internalUser, setInternalUser] = useState<T>();\n\tconst [authSDK, setAuthSDK] = useState<IGoogleAuth>();\n\tconst [user, setUser] = useState<IGoogleAuthResponse>();\n\tconst [userLogin, setUserLogin] = useState<IGoogleUserAuth>();\n\n\tconst loadScript = () => {\n\t\tif (!document.getElementById(googleSDKId)) {\n\t\t\tconst element = document.getElementsByTagName('script')[0];\n\t\t\tlet scriptElement = document.createElement('script') as HTMLScriptElement;\n\n\t\t\tscriptElement = document.createElement('script');\n\t\t\tscriptElement.id = googleSDKId;\n\t\t\tscriptElement.src = 'https://apis.google.com/js/api.js';\n\n\t\t\tif (element && element.parentNode) {\n\t\t\t\telement.parentNode.insertBefore(scriptElement, element);\n\t\t\t} else {\n\t\t\t\tdocument.head.appendChild(scriptElement);\n\t\t\t}\n\n\t\t\tscriptElement.onload = () => setLoaded(true);\n\t\t}\n\t};\n\n\tconst removeScript = () => {\n\t\tconst element = document.getElementById(googleSDKId);\n\n\t\tif (element) element.parentNode?.removeChild(element);\n\t};\n\n\tuseEffect(() => {\n\t\tloadScript();\n\n\t\treturn removeScript;\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (loaded) {\n\t\t\tcustomWindow.gapi.load('auth2', () => {\n\t\t\t\tcustomWindow.gapi.auth2\n\t\t\t\t\t.init(params)\n\t\t\t\t\t.then(() => setAuthSDK(customWindow.gapi.auth2.getAuthInstance()))\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif(authSDK) {\n\t\t\t\t\t\t\tsetUserLogin(authSDK.currentUser.get().wc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [loaded]);\n\n\tconst logIn = () => {\n\t\tif (authSDK) {\n\t\t\tauthSDK.signIn()\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (googleLoginInfos.internalAuthenticateURL) {\n\t\t\t\t\t\tconst userData = {\n\t\t\t\t\t\t\texpiresAt: res.getAuthResponse().expires_at,\n\t\t\t\t\t\t\texpiresIn: res.getAuthResponse().expires_in,\n\t\t\t\t\t\t\tidToken: res.getAuthResponse().id_token,\n\t\t\t\t\t\t\taccessToken: authSDK.currentUser.get().wc.access_token,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\taxios\n\t\t\t\t\t\t\t.post(googleLoginInfos.internalAuthenticateURL, userData,)\n\t\t\t\t\t\t\t.then(({ data }: AxiosResponse<T>) => setInternalUser(data))\n\t\t\t\t\t\t\t.catch(error => new Error(error))\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tsetUserLogin(authSDK.currentUser.get().wc);\n\t\t\t\t\t\t\t\tsetUser(res.getAuthResponse());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetUserLogin(authSDK.currentUser.get().wc);\n\t\t\t\t\t\tsetUser(res.getAuthResponse());\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t};\n\t};\n\n\tconst logOut = () => {\n\t\tif (authSDK) {\n\t\t\tauthSDK.signOut();\n\t\t\tsetInternalUser(undefined);\n\t\t\tsetUser(undefined);\n\t\t\tauthSDK.disconnect();\n\t\t};\n\t};\n\n\treturn {\n\t\tuserInfos: user,\n\t\tuserLogin,\n\t\tinternalUser,\n\t\tloaded,\n\t\tlogIn,\n\t\tlogOut,\n\t};\n};\n","/Users/macmini/PhpstormProjects/google_login/src/hooks/linkedin/use-linkedin-login.ts",["57"],"import { useEffect, useState } from 'react';\n\nimport axios, { AxiosResponse } from 'axios';\n\nimport { ILinkedinAccessTokenEvent, ILinkedinLoginParams } from './interfaces';\n\n/**\n * @description React hook for authentication with Linkedin\n * internalUser is the return of your own login app\n */\nexport const useLinkedinLogin = <T>(linkedinLoginParams: ILinkedinLoginParams) => {\n\tconst [internalUser, setInternalUser] = useState<T>();\n\tconst [accessToken, setAccessToken] = useState('');\n\n\tuseEffect(() => {\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\taddEventListener('message', (eventData: MessageEvent) => {\n\t\t\tconst params: ILinkedinAccessTokenEvent = eventData.data;\n\t\t\t\tif (params.from === 'linkedinAccessToken')\n\t\t\t\t\tsetAccessToken(params.accessToken);\n\t\t\t},\n\t\t);\n\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\treturn () => removeEventListener('message', () => {});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(accessToken && linkedinLoginParams.internalAuthenticateURL) {\n\t\t\taxios\n\t\t\t\t.post(linkedinLoginParams.internalAuthenticateURL, { accessToken })\n\t\t\t\t.then((response: AxiosResponse<T>) => setInternalUser(response.data));\n\t\t};\n\t}, [accessToken]);\n\n\tconst login = () => {\n\t\tconst params = [\n\t\t\t`response_type=code`,\n\t\t\t`client_id=${linkedinLoginParams.clientId}`,\n\t\t\t`redirect_uri=${linkedinLoginParams.redirecURI}`,\n\t\t\t`state=${linkedinLoginParams.state}`,\n\t\t\t`scope=${linkedinLoginParams.scopes.join(',')}`,\n\t\t];\n\n\t\tconst url = `https://www.linkedin.com/oauth/v2/authorization?${params.join('&')}`;\n\n\t\tif (linkedinLoginParams.usePopUp) {\n\t\t\twindow.open(url, '', 'width=400,height=400');\n\t\t} else {\n\t\t\twindow.open(url, '_self');\n\t\t};\n\t};\n\n\tconst logout = () => {\n\t\tconst logoutWindow = window.open('https://linkedin.com/m/logout', '', 'width=400,height=400');\n\n\t\tsetTimeout(() => {\n\t\t\tlogoutWindow?.close();\n\t\t\tsetInternalUser(undefined);\n\t\t\tsetAccessToken('');\n\t\t}, 1000);\n\t};\n\n\treturn {\n\t\tinternalUser,\n\t\taccessToken,\n\t\tlogin,\n\t\tlogout,\n\t};\n};\n",{"ruleId":"58","severity":1,"message":"59","line":33,"column":7,"nodeType":"60","messageId":"61","endLine":33,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":37,"column":11,"nodeType":"60","messageId":"61","endLine":37,"endColumn":18},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":8,"nodeType":"71","endLine":27,"endColumn":3},{"ruleId":"69","severity":1,"message":"72","line":60,"column":5,"nodeType":"73","endLine":60,"endColumn":7,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"75","line":75,"column":5,"nodeType":"73","endLine":75,"endColumn":13,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"77","line":34,"column":5,"nodeType":"73","endLine":34,"endColumn":18,"suggestions":"78"},"no-unused-vars","'linkedinError' is assigned a value but never used.","Identifier","unusedVar","'headers' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"react-hooks/exhaustive-deps","The 'facebookLoginInfos' object makes the dependencies of useEffect Hook (at line 71) change on every render. To fix this, wrap the initialization of 'facebookLoginInfos' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'language'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'authSDK' and 'params'. Either include them or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'linkedinLoginParams.internalAuthenticateURL'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [language]",{"range":"90","text":"91"},"Update the dependencies array to be: [authSDK, loaded, params]",{"range":"92","text":"93"},"Update the dependencies array to be: [accessToken, linkedinLoginParams.internalAuthenticateURL]",{"range":"94","text":"95"},[1673,1675],"[language]",[1952,1960],"[authSDK, loaded, params]",[1151,1164],"[accessToken, linkedinLoginParams.internalAuthenticateURL]"]